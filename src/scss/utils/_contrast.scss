// Copyright 2023 Scape Agency BV

// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at

// http://www.apache.org/licenses/LICENSE-2.0

// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.


// ============================================================================
// Utilities | Contrast
// ============================================================================


// Contrast Function
// ----------------------------------------------------------------------------
// A function to determine if you need a light or dark text color
// on a specific background for readability.
// ----------------------------------------------------------------------------

@function color_contrast($background-color) {
    @if (lightness($background-color) > 50%) {
        @return black; // Dark text on light background
    } @else {
        @return white; // Light text on dark background
    }
}


// Contrast Checker
// ----------------------------------------------------------------------------
// A function to calculate the contrast ratio between two colors, which is
// useful for accessibility considerations.
// ----------------------------------------------------------------------------

@function color_contrast_checker($color1-name, $color2-name) {
    $color1: hue-color($color1-name);
    $color2: hue-color($color2-name);
    @return contrast-ratio($color1, $color2);
}


// Color Contrast Ratio
// ----------------------------------------------------------------------------
// Calculates the contrast ratio between two colors, useful for accessibility
// checks.
// ----------------------------------------------------------------------------

@function hue_contrast_ratio($color_name1, $color_name2) {
    $color1: hue_color($color_name1);
    $color2: hue_color($color_name2);

    @if type-of($color1) != 'color' or type-of($color2) != 'color' {
        @warn "One or both specified colors could not be found.";
        @return null;
    }

    // Implement contrast ratio formula
    // Placeholder for actual calculation
    @return 'Contrast Ratio Calculation Placeholder';
}


// Dynamic Text Color
// ----------------------------------------------------------------------------
// A function to dynamically determine whether to use light or dark text
// based on the background color for better readability.
// ----------------------------------------------------------------------------

@function color_contrast_dynamic($background-color_name) {
    $background-color: hue-color($background-color_name);
    @if (hue-contrast($background-color, black) > 4.5) {
        @return black;
    } @else {
        @return white;
    }
}


// Contrast Text Color
// ----------------------------------------------------------------------------
// Generates a contrasting text color (black or white) based on the background color.
// ----------------------------------------------------------------------------

@function hue_contrast_text_color($background_color_name) {
    $background_color: hue_color($background_color_name);

    @if type-of($background_color) != 'color' {
        @warn "The specified color `#{$background_color_name}` could not be found.";
        @return null;
    }

    @if lightness($background_color) > 60% {
        @return black;
    } @else {
        @return white;
    }
}


// Accessibility Mixin
// ----------------------------------------------------------------------------
// A mixin to ensure text color contrasts well with its background for
// accessibility.
// ----------------------------------------------------------------------------

@mixin accessible_text_color($background_color_name) {
    $background-color: hue_color($background_color_name);
    color: color_contrast_checker($background-color);
}


// Readable Overlay Text Color
// ----------------------------------------------------------------------------
// Determines a readable color (light or dark) for text overlays on any
// background.
// ----------------------------------------------------------------------------

@function hue_readable_overlay($background_color_name) {
    $background_color: hue_color($background_color_name);

    @if type-of($background_color) != 'color' {
        @warn "The specified color `#{$background_color_name}` could not be found.";
        @return null;
    }

    @if lightness($background_color) > 50% {
        @return rgba(black, 0.7);
    } @else {
        @return rgba(white, 0.7);
    }
}

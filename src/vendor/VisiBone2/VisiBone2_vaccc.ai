%!PS-Adobe-3.0 
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 8.0.1
%%For: (Bob Stein) (VisiBone)
%%Title: (VisiBone2_vaccc.ai)
%%CreationDate: (2/29/00) (10:43 AM)
%%BoundingBox: 132 372 473 531
%%HiResBoundingBox: 132.8042 372.001 472.582 530.146
%%DocumentProcessColors: Black
%%DocumentFonts: Helvetica
%%DocumentNeededFonts: Helvetica
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_typography_AI5 1.0 1
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Black&White
%AI7_ImageSettings: 0
%%CMYKProcessColor: 0 0 0 1 ([Registration])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 0 1 1 1 0 1 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 () 
%AI3_TemplateBox: 306 396 306 396
%AI3_TileBox: 18 12 594 774
%AI3_DocumentPreview: None
%AI5_ArtSize: 612 792
%AI5_RulerUnits: 2
%AI5_ArtFlags: 1 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI8_OpenToView: -306.5 828.5 0.6667 828 582 18 0 1 11 68 0 0
%AI5_OpenViewLayers: 7
%%PageOrigin:18 12
%%AI3_PaperRect:-18 774 594 -18
%%AI3_Margin:18 -12 -18 18
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI7_Thumbnail: 128 60 8
%%BeginData: 6546 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FDA4FF7DFF7DFFA8A8FD04FF7DFD15FF7DFD04FFA8527DA8FD04FF
%A8FD52FF52FF527D7D7DFFA8FFFF7DA8FFA8FFFFA8FFFFA8FFFFA8A852FF
%FFA8FFFFFFA87DA8A8FFFF52FFFF7DFFA8A8FF52FFA8FF52FF52FFFFA8FD
%49FF52A87D7D52FF7D7D52FF27A8527D7D527D7DA87D527D7D7D52FF7D7D
%52FF27FFFF527DA8FF7D7DA852A87D52FF7D7D7D2752A852FF527D7DFD48
%FFA852FF7D7DFF7D7D7DA87DFF7D7DFF7DFF7DA87D52FF7D527DFF7D7D7D
%A87DFFFF7D7D7DFF7DA8A8FF7D7D27FFFD057DFF7DFF277D7DFD49FF27FF
%7D52FFA87D52FF277D7D7DFF7DFF7D7D7D527D527D27FFA87D52FF52FFFF
%5252A8FF7DFFFFFF7D527DA87DA87D5227FF52FF7D52A8FDFCFFFDFCFFFD
%FCFFFDFCFFFDB8FF7D5252A8FF7DFFFF7DFD06FF7DFD13FFA8FD0AFFA8A8
%FFFF7DFD08FFA852FD07FF527DFF7DFFFF527DFF52FF52FF52FD04FF52FF
%FFFFA85252FD04FF7DA8FD04FF7D5252A8FFFF7DFD13FFA8A8FFFF527DFF
%7D7D7DFFFF7D7D7DA87DFF7D7D7DFFFD057DFF7D7DFF7D7DFF27FFFFA87D
%FF7DA8FD087DFF7D7DFF7D7DFFFF277D7DA8FF7D7DFF7DFF52A852FF7D7D
%7DFF7DA852FF7DFF7D7DFF527DFFFFFF52FFA87D7DFF27A87DA8FFFF7DFF
%FFFF7DA87DFF7D7D7DA8A87DA8FD0BFFA87DFFFF7D7DA8527D7DA8FF7DFF
%7D52FF527DA87DFF7D52FF527DFF52527D52A87D7DFFFF52FF52FF527DFF
%7D7DA8527D52FF52A87D7D7DFFFF7D52FF527D5252FFFF52A8FF7DFF7DA8
%7DFF7D52A852FFFF27527D52FF527DA8FF7D7D527D7D7D527D52FFFF7DFF
%FF52FF527DFF7DFF7DFFA87D7DFD0BFF7DA8FFFF52A8A87D527DA8FF527D
%7D7D52A87D7D527D527DFF7D7DFF527DA87D7DA852FFFF7D52A8527D7DFF
%52A87D7D527DFF7D7DA8527DA8FF527DFF7DA87D52FF7D7D52FF7DFFA87D
%7DFFA852FF52FFFF7D7DA8527DA8FFA8527DA87D7D7D52A87D7DFFFF7D7D
%52A87D7D52FF7D7D52FF7D7D7DA8FDFCFFFD8CFF7D5252A8FF7DFD15FFA8
%52FD0CFF7DFD13FFA8FD06FF7DFFFF7DFFFFFF7DFD14FF7DFD05FF7DFFFF
%7DFD0DFF7DFD09FF7DA8FFFF277DA87D7DA852A8A87D7DFFA8FD047DFF52
%7DFFFF277D527D7D7DA8FFA87D7D7D52FF52FF527D7D7D527DFFFF527D52
%A8A87D7DA852A827FF7D7DA87DFF7D7D7D527D52FF52A87DFFFF7D52FF7D
%A8527D7D7D527DA8FD047D27A87D7DA85252FFFF277D7DA87DFF7D7DA87D
%FF7D52FF277DA8FD07FFA8A8FFFF7DA87D7D52A8FD047D52FFA87D527DFF
%7D7D52FFFF7D7DFF7D527D7DFF7DFFFF7DFF7D7D7DFF7D7DFF7D7DFFFF7D
%7DFF7D7DFF7DA87D7D7DFFFD047DFF7D7DFF7D27FD047DFFFFFF7D7DA87D
%7D7DFF7D7DFF7D7DFF7D7DFF7D7D7D527DFF7DFFFF7DFF7D7DFFFFFD047D
%FF277D7D7DFF7DFD07FF7DA8FFFF52A8527D52A8527DA87D52FF7D7D277D
%FFA8527DFFFF527DFF7D527DA8FFA87D527D52A852A8527D52FF527DA8FF
%527DFF7DA87D52A8527D52FF7D7D52FFFF7D527D527D52A85252FFFFFF52
%52FF5252527D7D7D527DA87D527DFF52A87D52A85252FFFF277DA852FFFF
%7D7D52FFFF7D52A8277DA8FD51FF7DA8FD08FF7DFFFF7DFD12FF7DA8FD92
%FF7DFD15FFA8FD05FF7D7DFFFFFF7DFFFFA8A8FD08FF7DFD0FFF7DFD07FF
%7DFFA8FFFF7DFD06FF7DFD05FF7DFD07FF7DFD0CFF7DFD06FFA8FD07FF7D
%FFFFFF277D7D7DA87D7DA852A8A87D52FF7D7DA87DA87D7DFF7DFF527DA8
%FF527DA8FFFF5252A87D52A8FF7D7DA87D52FF527D52FF52A8FF52527DA8
%FF527DA87D27FF52A8FD04FF52FF27FFFFFD057D52FF527DA8A87D7D52A8
%52FF527DFFFF277DA87D527D7DA8A87D7DA85252A87D7DA852FF7D52527D
%A8FF527D52FFFFFF7DFF7DFF7DFF7D7D7D52FF7D7DA8527D7D52A87D7DFF
%7DFF7D7DA8FFFD047DFF52FF7D7D52A87D7DA8FF7DFF527D7DFF527DFFFF
%527DFF7D52FF7D7DFF7D7D7D52FD04FF7DFF7DFFFF7D7DFF7D7DFFA87D7D
%A87D7DFF7D27FD047DFFFF7D7DA8277D7D52FFA87D527DFF527D7D5252FF
%FF7D527DFF7D7DA8527DFFFFFF277D52FFA87D5252A87DFF5252A8527DA8
%FD047DFF52FF52A87DFF527D7DFFFF2752A85252A8FF5252A87D52A8527D
%52A852FFFF7D52FF52A8527DA87D27A8527D7DFFFFFF52FF52A8FF7D52FF
%527D52A8525252A8527D527D52A8527DA8FF52A87D7D52277DA87D7D27A8
%5227A87D527D52FF527D52FF527D525252FDFCFFFD0DFF7DFF7D7D5252FF
%27FF7D7D7DFD07FF7DFD05FF7DFD08FF7DFFFF277D52FF527D7DFF277D7D
%FD09FF52FFFF7D52FFFF7DFD04FF7DFFA8FD06FF7DFF7DA8A87DFF7D7D52
%FF7D7D52FF527D7DFD09FF52FD16FF52A827FF52FFFF52A87D527DFD05FF
%7D527D7D7DA87D527DFF52527DA8FF527D52FFFF7DFF7D52FFFFA8FF527D
%7DFFFF7D7D527D7DFF5252FFFF7D7DA8FF52FF7D7DA827FD047D527DFFFF
%52FF52FF527DFF7DFFFFA87DFFFF52FD05FF7D7DA87D7DFF5252A87D7DA8
%52A8FD10FF527D52FF7DFFFFFD057DFD05FF7DFF7D527D7D7DFF7DFF7D7D
%FF7DA8A8527DFFFF277D527DFF7D27FF52A87DFFFF7D7D7DFF7D7DFF7DFF
%FFFFFD047DFF527D7D7DA8A8527D7DFD04FF7D7DFF5252A87DFFA8FF7DFF
%A87DFFFFA8FFFF7DFF7DFF7D7DFF7D7D7D52A87D7DFD10FF52FF52FF52FF
%FF7D52A8527D527D7DFFFF7D527D527DA87D527DFF7D52FF52A8525252FF
%FF7DFF7DA87D5252FF27527DFFFF527D52FF52A85227FFFF527D7DFF52FF
%527DA852A87D527D52FD04FF52A87DA8FF527D527DFF7D527DA87D52A8FF
%FF527DA87D52A85227A87D527D527D7DFD1DFFA8FDFCFFFD76FF7D7DFFF8
%FD05FF52FD05FF52FD15FF7DFFFFFF7D7DFD18FF52FD14FFA8FFA852FD04
%FFA852FFFFFF52FFFFFF52FD16FF52A8A852FF7D7DA85252FF7D7DFFFF52
%527DA8A8FF7D7DA87D7D7DA87DFF7DA8A8FF7DFF7D7DFF7D52FD047DFF7D
%A87D7D7DFF52A8FFFF7D7DFFFD057D52FFFF52A8FD047DFFFF7DA8A87D7D
%A87D7DFF7DA8A8A87DFF277D52A8FFFF527DFF7D527D7D7DA8527DFF7D7D
%FD12FF7D7D7D52FF527D52FF527D5252FFFF52FF527DA8FF527D527D527D
%527D525252FFFF7D7DFF52FF527D527DFF7D52FF527DFF7D527D27FFFF7D
%A87DFF7D52FF527DFFFF527DFF7D52FFFFFF52A8FD047D5252FFFD057DFF
%7D52FF52FFFF2727A852FF527DFF7D52FF5227527DFD11FF7DFF527DFFFD
%047D52A87D7DFFFF527DFF52FFFFA87D52FFA87D52FF52A87DFFA8A87DFF
%7DFFFD067DFF7D7D7DFF7DA87D7DA8FF7D7DA87D7D7DFF7D7DFFFF7DA87D
%7D7DFFFFFF7D52A8527DA87D7DFF7D7D52FF7DFF527DFF7DFFA8A8FFFD06
%7DA8527DA87D7DA8FD22FF52A8FDFCFFFD1BFF7D52FF52FD05FFA8FD05FF
%A8A8FD04FFA87D7DA8FD67FF7D7DFF7D7DFFA8FD057DA8FD047DA87DFF52
%FD047DFD67FF7D52FF527D7DA8527D7DA852A87D527DA852FF527D527D7D
%7DFD67FF7D7DFF7D52FD047DA8527D7D7D27A87D7D52A87DA8527DA8A8FD
%FCFFFDFCFFFDFCFFFDFCFFFDC2FFFF
%%EndData
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_typography_AI5 1.0 1
%%Title: (Typography Operators)
%%Version: 1.0 1
%%CreationDate:(6/10/1996) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_typography_AI5 68 dict dup begin
put
/initialize
{
 begin
 begin
	Adobe_typography_AI5 begin
	Adobe_typography_AI5
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
 end
 end
	Adobe_typography_AI5 begin
} def
/terminate
{
	currentdict Adobe_typography_AI5 eq
	{
	 end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	/_pntr 0 ddef
	{
		counttomark -1 roll
		dup type dup /marktype eq
		{
			pop pop exit
		}
		{
			/nametype eq
			{
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				/_pntr exch ddef
			} ifelse
		} ifelse
	} loop
	_tempEncode
} def
/havefont
{
	systemdict /languagelevel known
		{
		/Font resourcestatus dup
			{ exch pop exch pop }
		if
		}
		{
		systemdict /FontDirectory get 1 index known
			{ pop true }
			{
			systemdict /fileposition known
				{
				dup length 6 add exch
				Ss 6 250 getinterval
				cvs pop
				Ss exch 0 exch getinterval
				status
					{ pop pop pop pop true }
					{ false }
				ifelse
				}
				{
				pop false
				}
			ifelse
			}
		ifelse
		}
	ifelse
} def
/TE
{
	StandardEncoding 256 array copy modifyEncoding
	/_nativeEncoding exch def
} def
/subststring {
	exch 2 index exch search
	{
		exch pop
		exch dup () eq
		{
			pop exch concatstring
		}
		{
			3 -1 roll
			exch concatstring
			concatstring
		} ifelse
		exch pop true
	}
	{
		pop pop false
	} ifelse
} def
/concatstring {
	1 index length 1 index length
	1 index add
	string
	dup 0 5 index putinterval
	dup 2 index 4 index putinterval
	4 1 roll pop pop pop
} def
%
/TZ
{
	dup type /arraytype eq
	{
		/_wv exch def
	}
	{
		/_wv 0 def
	} ifelse
	/_useNativeEncoding exch def
	2 index havefont
	{
		3 index
		255 string
		cvs
		
		dup
		(_Symbol_)
		eq
		{
			pop
			2 index
			findfont
			
		}
		{
			1 index 0 eq
			{
				dup length 1 sub
				1 exch
				getinterval
				
				cvn
				findfont
			}
			{
				pop 2 index findfont
			} ifelse
		} ifelse
	}
	{
		dup 1 eq
		{
			2 index 64 string cvs
			dup (-90pv-RKSJ-) (-83pv-RKSJ-) subststring
			{
				exch pop dup havefont
				{
					findfont false
				}
				{
					pop true
				} ifelse
			}
			{
				pop	dup
				(-90ms-RKSJ-) (-Ext-RKSJ-) subststring
				{
					exch pop dup havefont
					{
						findfont false
					}
					{
						pop true
					} ifelse
				}
				{
					pop pop true
				} ifelse
			} ifelse
			{
				1 index 1 eq
				{
					/Ryumin-Light-Ext-RKSJ-V havefont
					{/Ryumin-Light-Ext-RKSJ-V}
					{/Courier}
					ifelse
				}
				{
					/Ryumin-Light-83pv-RKSJ-H havefont
					{/Ryumin-Light-83pv-RKSJ-H}
					{/Courier}
					ifelse
				} ifelse
				findfont
				[1 0 0.5 1 0 0] makefont
			} if
		}
		{
			/Courier findfont
		} ifelse
	} ifelse
	_wv type /arraytype eq
	{
		_wv makeblendedfont
	} if
	dup length 10 add dict
 begin
	mark exch
	{
		1 index /FID ne
		{
			def
		} if
		cleartomark mark
	} forall
	pop
	/FontScript exch def
	/FontDirection exch def
	/FontRequest exch def
	/FontName exch def
	counttomark 0 eq
	{
		1 _useNativeEncoding eq
		{
			/Encoding _nativeEncoding def
		} if
		cleartomark
	}
	{
		/Encoding load 256 array copy
		modifyEncoding /Encoding exch def
	} ifelse
	FontName currentdict
 end
	definefont pop
} def
/tr
{
	_ax _ay 3 2 roll
} def
/trj
{
	_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
	/Tx
	{
		dup
		currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
	} ddef
	/Tj
	{
		dup
		currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
	} ddef
} def
/a1
{
W B
} def
/e0
{
	/Tx
	{
		tr _psf
	} ddef
	/Tj
	{
		trj _pjsf
	} ddef
} def
/e1
{
W F 
} def
/i0
{
	/Tx
	{
		tr sp
	} ddef
	/Tj
	{
		trj jsp
	} ddef
} def
/i1
{
	W N
} def
/o0
{
	/Tx
	{
		tr sw rmoveto
	} ddef
	/Tj
	{
		trj swj rmoveto
	} ddef
} def
/r0
{
	/Tx
	{
		tr _ctm _pss
	} ddef
	/Tj
	{
		trj _ctm _pjss
	} ddef
} def
/r1
{
W S
} def
/To
{
	pop _ctm currentmatrix pop
} def
/TO
{
	iTe _ctm setmatrix newpath
} def
/Tp
{
	pop _tm astore pop _ctm setmatrix
	_tDict begin
	/W
	{
	} def
	/h
	{
	} def
} def
/TP
{
 end
	iTm 0 0 moveto
} def
/Tr
{
	_render 3 le
	{
		currentpoint newpath moveto
	} if
	dup 8 eq
	{
		pop 0
	}
	{
		dup 9 eq
		{
			pop 1
		} if
	} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm
{
	_ctm setmatrix _tm concat
	_shift aload pop _lineorientation 1 eq { exch } if translate
	_scale aload pop _lineorientation 1 eq _yokoorientation 1 eq or { exch } if scale
} def
/Tm
{
	_tm astore pop iTm 0 0 moveto
} def
/Td
{
	_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
	_render -1 eq
	{
	}
	{
		_renderEnd _render get dup null ne
		{
			load exec
		}
		{
			pop
		} ifelse
	} ifelse
	/_render -1 ddef
} def
/Ta
{
	pop
} def
/Tf
{
	1 index type /nametype eq
	{
		dup 0.75 mul 1 index 0.25 mul neg
	} if
	/_fontDescent exch ddef
	/_fontAscent exch ddef
	/_fontSize exch ddef
	/_fontRotateAdjust _fontAscent _fontDescent add 2 div neg ddef
	/_fontHeight _fontSize ddef
	findfont _fontSize scalefont setfont
} def
/Tl
{
	pop neg 0 exch
	_leading astore pop
} def
/Tt
{
	pop
} def
/TW
{
	3 npop
} def
/Tw
{
	/_cx exch ddef
} def
/TC
{
	3 npop
} def
/Tc
{
	/_ax exch ddef
} def
/Ts
{
	0 exch
	_shift astore pop
	currentpoint
	iTm
	moveto
} def
/Ti
{
	3 npop
} def
/Tz
{
	count 1 eq { 100 } if
	100 div exch 100 div exch
	_scale astore pop
	iTm
} def
/TA
{
	pop
} def
/Tq
{
	pop
} def
/Tg
{
	pop
} def
/TG
{
	pop
} def
/Tv
{
	/_lineorientation exch ddef
} def
/TV
{
	/_charorientation exch ddef
} def
/Ty
{
	dup /_yokoorientation exch ddef 1 sub neg Tv
} def
/TY
{
	pop
} def
/T~
{
	Tx
} def
/Th
{
	pop pop pop pop pop
} def
/TX
{
	pop
} def
/Tk
{
	_fontSize mul 1000 div
	_lineorientation 0 eq { neg 0 } { 0 exch } ifelse
	rmoveto
	pop
} def
/TK
{
	2 npop
} def
/T*
{
	_leading aload pop
	_lineorientation 0 ne { exch } if
	Td
} def
/T*-
{
	_leading aload pop
	_lineorientation 0 ne { exch } if
	exch neg exch neg
	Td
} def
/T-
{
	_ax neg 0 rmoveto
	_lineorientation 1 eq _charorientation 0 eq and { 1 TV _hyphen Tx 0 TV } { _hyphen Tx } ifelse
} def
/T+
{
} def
/TR
{
	_ctm currentmatrix pop
	_tm astore pop
	iTm 0 0 moveto
} def
/TS
{
	currentfont 3 1 roll
	/_Symbol_ findfont _fontSize scalefont setfont
	
	0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	setfont
} def
/Xb
{
	pop pop
} def
/Tb /Xb load def
/Xe
{
	pop pop pop pop
} def
/Te /Xe load def
/XB
{
} def
/TB /XB load def
currentdict readonly pop
end
setpacking
%
/X^
{
	currentfont 5 1 roll
	dup havefont
		{
		findfont _fontSize scalefont setfont
		}
		{
		pop
		exch
		} ifelse
	2 index 0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	pop	pop
	setfont
} def
/T^	/X^	load def
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeFont: Helvetica
userdict /_useSmoothShade false put
userdict /_aicmykps false put
userdict /_forceToCMYK false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_typography_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
[
39/quotesingle 96/grave 130/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE 145/quoteleft
/quoteright/quotedblleft/quotedblright/bullet/endash/emdash/tilde/trademark
/scaron/guilsinglright/oe/dotlessi 159/Ydieresis /space 164/currency 166/brokenbar
168/dieresis/copyright/ordfeminine 172/logicalnot/hyphen/registered/macron/ring
/plusminus/twosuperior/threesuperior/acute/mu 183/periodcentered/cedilla
/onesuperior/ordmasculine 188/onequarter/onehalf/threequarters 192/Agrave
/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla/Egrave/Eacute
/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis/Eth/Ntilde
/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash/Ugrave
/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave/aacute
/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute/ecircumflex
/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute
/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex
/udieresis/yacute/thorn/ydieresis
TE
%AI55J_Tsume: None
%AI3_BeginEncoding: _Helvetica Helvetica
[/_Helvetica/Helvetica 0 0 1 TZ%AI3_EndEncoding AdobeType
%AI5_BeginPalette
0 0 Pb
0 0 0 1 ([Registration]) 0 Xs
([Registration]) Pc
0 0 0 0 1 1 1 Xa
(FFFFFF  255,255,255  White) Pc
0.1882 0.1294 0.102 0.0118 0.8 0.8 0.8 Xa
(CCCCCC  204,204,204  Pale Gray) Pc
0.3529 0.2549 0.2235 0.0667 0.6 0.6 0.6 Xa
(999999  153,153,153  Light Gray) Pc
0.4902 0.3647 0.3451 0.2196 0.4 0.4 0.4 Xa
(666666  102,102,102  Dark Gray) Pc
0.6235 0.4863 0.4863 0.4784 0.2 0.2 0.2 Xa
(333333  51,51,51  Obscure Gray) Pc
0 0 0 1 0 0 0 Xa
(000000  0,0,0  Black) Pc
0.0078 0.1961 0.9373 0 1 0.8 0 Xa
(FFCC00  255,204,0  Yellow-Yellow-Orange) Pc
0.0275 0.3922 0.9412 0.0039 1 0.6 0 Xa
(FF9900  255,153,0  Orange-Orange-Yellow) Pc
0.0196 0.5961 0.9137 0 1 0.4 0 Xa
(FF6600  255,102,0  Orange-Orange-Red) Pc
0.0235 0.8078 0.9176 0 1 0.2 0 Xa
(FF3300  255,51,0  Red-Red-Orange) Pc
0 0 0 1 0 0 0 Xa
( ) Pc
( ) Pc
( ) Pc
( ) Pc
( ) Pc
( ) Pc
0.4 0.0353 0.9608 0.0039 0.6 0.8 0 Xa
(99CC00  153,204,0  Dark Yellow-Spring) Pc
0 0 0 1 0 0 0 Xa
( ) Pc
( ) Pc
( ) Pc
( ) Pc
0.1647 0.3216 0.9294 0.0431 0.8 0.6 0 Xa
(CC9900  204,153,0  Dark Yellow-Orange) Pc
0.0118 0.1961 0.7922 0 1 0.8 0.2 Xa
(FFCC33  255,204,51  Light Yellow-Orange) Pc
0.0235 0.1961 0.5569 0 1 0.8 0.4 Xa
(FFCC66  255,204,102  Light Orange-Yellow) Pc
0.0196 0.4 0.498 0.0039 1 0.6 0.4 Xa
(FF9966  255,153,102  Light Orange-Red) Pc
0.0118 0.6 0.7177 0 1 0.4 0.2 Xa
(FF6633  255,102,51  Light Red-Orange) Pc
0.1647 0.7804 0.9529 0.0431 0.8 0.2 0 Xa
(CC3300  204,51,0  Dark Red-Orange) Pc
0 0 0 1 0 0 0 Xa
( ) Pc
( ) Pc
( ) Pc
( ) Pc
0.1529 0.9412 0.6039 0.0392 0.8 0 0.2 Xa
(CC0033  204,0,51  Dark Red-Pink) Pc
0.2 0 0.9529 0 0.8 1 0 Xa
(CCFF00  204,255,0  Yellow-Yellow-Spring) Pc
0.2039 0 0.851 0 0.8 1 0.2 Xa
(CCFF33  204,255,51  Light Yellow-Spring) Pc
0.6235 0.4745 0.9922 0.4627 0.2 0.2 0 Xa
(333300  51,51,0  Obscure Weak Yellow) Pc
0.502 0.349 0.9882 0.1961 0.4 0.4 0 Xa
(666600  102,102,0  Obscure Dull Yellow) Pc
0.3569 0.2274 0.9961 0.0667 0.6 0.6 0 Xa
(999900  153,153,0  Dark Faded Yellow) Pc
0.1882 0.1098 0.9569 0.0157 0.8 0.8 0 Xa
(CCCC00  204,204,0  Dark Hard Yellow) Pc
0.0314 0.0196 0.9137 0 1 1 0 Xa
(FFFF00  255,255,0  Yellow) Pc
0.1608 0.3255 0.7726 0.0431 0.8 0.6 0.2 Xa
(CC9933  204,153,51  Medium Orange-Yellow) Pc
0.1608 0.5529 0.7216 0.0392 0.8 0.4 0.2 Xa
(CC6633  204,102,51  Medium Orange-Red) Pc
0.4431 0.9569 0.8588 0.6431 0.2 0 0 Xa
(330000  51,0,0  Obscure Weak Red) Pc
0.3725 0.9451 0.9098 0.3608 0.4 0 0 Xa
(660000  102,0,0  Obscure Dull Red) Pc
0.2863 0.9294 0.9529 0.1608 0.6 0 0 Xa
(990000  153,0,0  Dark Faded Red) Pc
0.1647 0.9451 0.9451 0.0431 0.8 0 0 Xa
(CC0000  204,0,0  Dark Hard Red) Pc
0.0118 0.9608 0.9137 0 1 0 0 Xa
(FF0000  255,0,0  Red) Pc
0.0078 0.8196 0.3137 0 1 0.2 0.4 Xa
(FF3366  255,51,102  Light Red-Pink) Pc
0.0078 0.9647 0.6078 0 1 0 0.2 Xa
(FF0033  255,0,51  Red-Red-Pink) Pc
0.4039 0 0.9922 0 0.6 1 0 Xa
(99FF00  153,255,0  Spring-Spring-Yellow) Pc
0.2039 0 0.6314 0 0.8 1 0.4 Xa
(CCFF66  204,255,102  Light Spring-Yellow) Pc
0.4 0.0353 0.8627 0.0039 0.6 0.8 0.2 Xa
(99CC33  153,204,51  Medium Spring-Yellow) Pc
0.4941 0.3569 0.7294 0.2078 0.4 0.4 0.2 Xa
(666633  102,102,51  Dark Weak Yellow) Pc
0.3529 0.2353 0.7961 0.0706 0.6 0.6 0.2 Xa
(999933  153,153,51  Dark Dull Yellow) Pc
0.1882 0.1137 0.8078 0.0157 0.8 0.8 0.2 Xa
(CCCC33  204,204,51  Medium Faded Yellow) Pc
0.0314 0.0196 0.8078 0 1 1 0.2 Xa
(FFFF33  255,255,51  Light Hard Yellow) Pc
0.2863 0.451 0.9412 0.1608 0.6 0.4 0 Xa
(996600  153,102,0  Dark Orange-Yellow) Pc
0.2863 0.7294 0.9451 0.1608 0.6 0.2 0 Xa
(993300  153,51,0  Dark Orange-Red) Pc
0.3843 0.6353 0.5451 0.3529 0.4 0.2 0.2 Xa
(663333  102,51,51  Dark Weak Red) Pc
0.2823 0.7333 0.6235 0.1608 0.6 0.2 0.2 Xa
(993333  153,51,51  Dark Dull Red) Pc
0.1569 0.7882 0.6588 0.0392 0.8 0.2 0.2 Xa
(CC3333  204,51,51  Medium Faded Red) Pc
0.0196 0.8118 0.6588 0 1 0.2 0.2 Xa
(FF3333  255,51,51  Light Hard Red) Pc
0.149 0.7922 0.302 0.0392 0.8 0.2 0.4 Xa
(CC3366  204,51,102  Medium Pink-Red) Pc
0.0157 0.6118 0.1333 0 1 0.4 0.6 Xa
(FF6699  255,102,153  Light Pink-Red) Pc
0 0.9686 0.2157 0 1 0 0.4 Xa
(FF0066  255,0,102  Pink-Pink-Red) Pc
0.6078 0 0.9922 0 0.4 1 0 Xa
(66FF00  102,255,0  Spring-Spring-Green) Pc
0.4039 0 0.6667 0 0.6 1 0.4 Xa
(99FF66  153,255,102  Light Spring-Green) Pc
0.6078 0 0.9137 0 0.4 0.8 0.2 Xa
(66CC33  102,204,51  Medium Spring-Green) Pc
0.5922 0.1412 0.9804 0.0275 0.4 0.6 0 Xa
(669900  102,153,0  Dark Spring-Yellow) Pc
0.349 0.2392 0.5059 0.0784 0.6 0.6 0.4 Xa
(999966  153,153,102  Medium Weak Yellow) Pc
0.1922 0.1176 0.5765 0.0118 0.8 0.8 0.4 Xa
(CCCC66  204,204,102  Light Dull Yellow) Pc
0.0235 0.0118 0.6 0 1 1 0.4 Xa
(FFFF66  255,255,102  Light Faded Yellow) Pc
0.2863 0.4588 0.7098 0.1569 0.6 0.4 0.2 Xa
(996633  153,102,51  Dark Dull Orange) Pc
0.3765 0.6196 0.9412 0.3608 0.4 0.2 0 Xa
(663300  102,51,0  Obscure Dull Orange) Pc
0.302 0.4745 0.3765 0.1373 0.6 0.4 0.4 Xa
(996666  153,102,102  Medium Weak Red) Pc
0.1569 0.5608 0.4157 0.0392 0.8 0.4 0.4 Xa
(CC6666  204,102,102  Light Dull Red) Pc
0.0039 0.6078 0.4235 0 1 0.4 0.4 Xa
(FF6666  255,102,102  Light Faded Red) Pc
0.2784 0.9412 0.5412 0.1608 0.6 0 0.2 Xa
(990033  153,0,51  Dark Pink-Red) Pc
0.1725 0.8 0.0157 0 0.8 0.2 0.6 Xa
(CC3399  204,51,153  Medium Pink-Magenta) Pc
0.0157 0.6157 0 0 1 0.4 0.8 Xa
(FF66CC  255,102,204  Light Pink-Magenta) Pc
0.0039 0.949 0.0078 0 1 0 0.6 Xa
(FF0099  255,0,153  Pink-Pink-Magenta) Pc
0.8196 0 1 0 0.2 1 0 Xa
(33FF00  51,255,0  Green-Green-Spring) Pc
0.6078 0 0.949 0 0.4 1 0.2 Xa
(66FF33  102,255,51  Light Green-Spring) Pc
0.8157 0.0431 1 0.0039 0.2 0.6 0 Xa
(339900  51,153,0  Dark Spring-Green) Pc
0.6039 0 0.9961 0 0.4 0.8 0 Xa
(66CC00  102,204,0  Dark Hard Spring) Pc
0.4039 0 0.8863 0 0.6 1 0.2 Xa
(99FF33  153,255,51  Light Hard Spring) Pc
0.1882 0.1216 0.3372 0.0157 0.8 0.8 0.6 Xa
(CCCC99  204,204,153  Light Weak Yellow) Pc
0.0314 0.0118 0.3961 0 1 1 0.6 Xa
(FFFF99  255,255,153  Pale Dull Yellow) Pc
0.1608 0.3294 0.498 0.0431 0.8 0.6 0.4 Xa
(CC9966  204,153,102  Light Dull Orange) Pc
0.1647 0.549 0.9725 0.0431 0.8 0.4 0 Xa
(CC6600  204,102,0  Dark Hard Orange) Pc
0.1686 0.3412 0.2353 0.0314 0.8 0.6 0.6 Xa
(CC9999  204,153,153  Light Weak Red) Pc
0.0157 0.4039 0.2471 0 1 0.6 0.6 Xa
(FF9999  255,153,153  Pale Dull Red) Pc
0.0118 0.8235 0.0353 0 1 0.2 0.6 Xa
(FF3399  255,51,153  Light Hard Pink) Pc
0.1412 0.9333 0.2118 0.0353 0.8 0 0.4 Xa
(CC0066  204,0,102  Dark Hard Pink) Pc
0.3608 0.9608 0.1725 0.051 0.6 0 0.4 Xa
(990066  153,0,102  Dark Pink-Magenta) Pc
0.0039 0.8235 0 0 1 0.2 0.8 Xa
(FF33CC  255,51,204  Light Magenta-Pink) Pc
0.0039 0.9333 0 0 1 0 0.8 Xa
(FF00CC  255,0,204  Magenta-Magenta-Pink) Pc
0.9569 0 1 0 0 0.8 0 Xa
(00CC00  0,204,0  Dark Hard Green) Pc
0.8314 0 1 0 0.2 0.8 0 Xa
(33CC00  51,204,0  Dark Green-Spring) Pc
0.7765 0.2706 0.9922 0.1216 0.2 0.4 0 Xa
(336600  51,102,0  Obscure Dull Spring) Pc
0.5882 0.1529 0.8627 0.0314 0.4 0.6 0.2 Xa
(669933  102,153,51  Dark Dull Spring) Pc
0.4 0.0314 0.6118 0.0039 0.6 0.8 0.4 Xa
(99CC66  153,204,102  Light Dull Spring) Pc
0.2039 0 0.4157 0 0.8 1 0.6 Xa
(CCFF99  204,255,153  Pale Dull Spring) Pc
0.0392 0.0118 0.1961 0 1 1 0.8 Xa
(FFFFCC  255,255,204  Pale Weak Yellow) Pc
0.0275 0.1922 0.3333 0.0039 1 0.8 0.6 Xa
(FFCC99  255,204,153  Pale Dull Orange) Pc
0.0235 0.3961 0.7529 0.0039 1 0.6 0.2 Xa
(FF9933  255,153,51  Light Hard Orange) Pc
0.0196 0.1961 0.1098 0 1 0.8 0.8 Xa
(FFCCCC  255,204,204  Pale Weak Red) Pc
0.0196 0.4078 0.0392 0 1 0.6 0.8 Xa
(FF99CC  255,153,204  Pale Dull Pink) Pc
0.1686 0.5726 0.1255 0.0196 0.8 0.4 0.6 Xa
(CC6699  204,102,153  Light Dull Pink) Pc
0.3176 0.7529 0.2627 0.1098 0.6 0.2 0.4 Xa
(993366  153,51,102  Dark Dull Pink) Pc
0.3686 0.9608 0.3882 0.3608 0.4 0 0.2 Xa
(660033  102,0,51  Obscure Dull Pink) Pc
0.1569 0.9529 0.0078 0 0.8 0 0.6 Xa
(CC0099  204,0,153  Dark Magenta-Pink) Pc
0.702 0.9529 0.3765 0.3725 0.2 0 0.2 Xa
(330033  51,0,51  Obscure Weak Magenta) Pc
0.8196 0 0.9686 0 0.2 0.8 0.2 Xa
(33CC33  51,204,51  Medium Faded Green) Pc
0.6 0 0.6588 0 0.4 0.8 0.4 Xa
(66CC66  102,204,102  Light Dull Green) Pc
0.9255 0 1 0 0 1 0 Xa
(00FF00  0,255,0  Green) Pc
0.8 0 1 0 0.2 1 0.2 Xa
(33FF33  51,255,51  Light Hard Green) Pc
0.6039 0 0.7255 0 0.4 1 0.4 Xa
(66FF66  102,255,102  Light Faded Green) Pc
0.4039 0 0.4353 0 0.6 1 0.6 Xa
(99FF99  153,255,153  Pale Dull Green) Pc
0.2039 0 0.1961 0 0.8 1 0.8 Xa
(CCFFCC  204,255,204  Pale Weak Green) Pc
0 0 0 1 0 0 0 Xa
( ) Pc
( ) Pc
( ) Pc
0.1882 0.3608 0.0118 0 0.8 0.6 0.8 Xa
(CC99CC  204,153,204  Light Weak Magenta) Pc
0.3843 0.5255 0.1216 0.0196 0.6 0.4 0.6 Xa
(996699  153,102,153  Medium Weak Magenta) Pc
0.3922 0.7804 0.0157 0 0.6 0.2 0.6 Xa
(993399  153,51,153  Dark Dull Magenta) Pc
0.3961 0.9412 0 0 0.6 0 0.6 Xa
(990099  153,0,153  Dark Faded Magenta) Pc
0.5529 0.7137 0.2588 0.1216 0.4 0.2 0.4 Xa
(663366  102,51,102  Dark Weak Magenta) Pc
0.5961 0.9451 0.1765 0.051 0.4 0 0.4 Xa
(660066  102,0,102  Obscure Dull Magenta) Pc
0.9333 0.2078 1 0.0745 0 0.4 0 Xa
(006600  0,102,0  Obscure Dull Green) Pc
0.7726 0.2902 0.8157 0.1373 0.2 0.4 0.2 Xa
(336633  51,102,51  Dark Weak Green) Pc
0.9373 0 1 0 0 0.6 0 Xa
(009900  0,153,0  Dark Faded Green) Pc
0.8157 0.0588 0.9333 0.0078 0.2 0.6 0.2 Xa
(339933  51,153,51  Dark Dull Green) Pc
0.5882 0.1686 0.5569 0.0392 0.4 0.6 0.4 Xa
(669966  102,153,102  Medium Weak Green) Pc
0.4 0.051 0.3608 0.0039 0.6 0.8 0.6 Xa
(99CC99  153,204,153  Light Weak Green) Pc
0 0 0 1 0 0 0 Xa
( ) Pc
( ) Pc
( ) Pc
0.0275 0.1961 0.0039 0 1 0.8 1 Xa
(FFCCFF  255,204,255  Pale Weak Magenta) Pc
0.0235 0.4078 0 0 1 0.6 1 Xa
(FF99FF  255,153,255  Pale Dull Magenta) Pc
0.0078 0.6196 0 0 1 0.4 1 Xa
(FF66FF  255,102,255  Light Faded Magenta) Pc
0.0039 0.8392 0 0 1 0.2 1 Xa
(FF33FF  255,51,255  Light Hard Magenta) Pc
0.0078 0.9529 0 0 1 0 1 Xa
(FF00FF  255,0,255  Magenta) Pc
0.1765 0.5843 0.0039 0 0.8 0.4 0.8 Xa
(CC66CC  204,102,204  Light Dull Magenta) Pc
0.1608 0.8157 0 0 0.8 0.2 0.8 Xa
(CC33CC  204,51,204  Medium Faded Magenta) Pc
0.9373 0.3922 0.9961 0.4 0 0.2 0 Xa
(003300  0,51,0  Obscure Weak Green) Pc
0.9373 0 0.9882 0 0 0.8 0.2 Xa
(00CC33  0,204,51  Dark Green-Teal) Pc
0.9529 0.2235 0.8902 0.0824 0 0.4 0.2 Xa
(006633  0,102,51  Obscure Dull Teal) Pc
0.8157 0.0706 0.6235 0.0118 0.2 0.6 0.4 Xa
(339966  51,153,102  Dark Dull Teal) Pc
0.6078 0.0078 0.3843 0 0.4 0.8 0.6 Xa
(66CC99  102,204,153  Light Dull Teal) Pc
0.4078 0 0.2078 0 0.6 1 0.8 Xa
(99FFCC  153,255,204  Pale Dull Teal) Pc
0.1882 0.0039 0.0235 0 0.8 1 1 Xa
(CCFFFF  204,255,255  Pale Weak Cyan) Pc
0.8078 0.1725 0 0 0.2 0.6 1 Xa
(3399FF  51,153,255  Light Hard Azure) Pc
0.3922 0.0745 0 0 0.6 0.8 1 Xa
(99CCFF  153,204,255  Pale Dull Azure) Pc
0.1882 0.1451 0 0 0.8 0.8 1 Xa
(CCCCFF  204,204,255  Pale Weak Blue) Pc
0.1804 0.3647 0 0 0.8 0.6 1 Xa
(CC99FF  204,153,255  Pale Dull Violet) Pc
0.4 0.5412 0 0 0.6 0.4 0.8 Xa
(9966CC  153,102,204  Light Dull Violet) Pc
0.6196 0.749 0.0314 0.0039 0.4 0.2 0.6 Xa
(663399  102,51,153  Dark Dull Violet) Pc
0.8353 0.9686 0.1608 0.0431 0.2 0 0.4 Xa
(330066  51,0,102  Obscure Dull Violet) Pc
0.3922 0.9451 0 0 0.6 0 0.8 Xa
(9900CC  153,0,204  Dark Magenta-Violet) Pc
0.1412 0.9608 0 0 0.8 0 0.8 Xa
(CC00CC  204,0,204  Dark Hard Magenta) Pc
0.8941 0 1 0 0 1 0.2 Xa
(00FF33  0,255,51  Green-Green-Teal) Pc
0.8196 0 0.8392 0 0.2 1 0.4 Xa
(33FF66  51,255,102  Light Green-Teal) Pc
0.9608 0.0078 0.9843 0 0 0.6 0.2 Xa
(009933  0,153,51  Dark Teal-Green) Pc
0.898 0 0.7882 0 0 0.8 0.4 Xa
(00CC66  0,204,102  Dark Hard Teal) Pc
0.7961 0 0.5373 0 0.2 1 0.6 Xa
(33FF99  51,255,153  Light Hard Teal) Pc
0.3843 0 0.0353 0 0.6 1 1 Xa
(99FFFF  153,255,255  Pale Dull Cyan) Pc
0.4039 0.0549 0.1098 0.0039 0.6 0.8 0.8 Xa
(99CCCC  153,204,204  Light Weak Cyan) Pc
0.9412 0.4039 0 0 0 0.4 0.8 Xa
(0066CC  0,102,204  Dark Hard Azure) Pc
0.6157 0.2235 0.0314 0.0039 0.4 0.6 0.8 Xa
(6699CC  102,153,204  Light Dull Azure) Pc
0.3922 0.3098 0 0 0.6 0.6 1 Xa
(9999FF  153,153,255  Pale Dull Blue) Pc
0.4039 0.298 0.0314 0.0039 0.6 0.6 0.8 Xa
(9999CC  153,153,204  Light Weak Blue) Pc
0.3843 0.8 0 0 0.6 0.2 1 Xa
(9933FF  153,51,255  Light Hard Violet) Pc
0.6471 0.9412 0 0 0.4 0 0.8 Xa
(6600CC  102,0,204  Dark Hard Violet) Pc
0.6314 0.9608 0 0 0.4 0 0.6 Xa
(660099  102,0,153  Dark Violet-Magenta) Pc
0.149 0.8157 0 0 0.8 0.2 1 Xa
(CC33FF  204,51,255  Light Magenta-Violet) Pc
0.1216 0.9333 0 0 0.8 0 1 Xa
(CC00FF  204,0,255  Magenta-Magenta-Violet) Pc
0.902 0 0.8824 0 0 1 0.4 Xa
(00FF66  0,255,102  Teal-Teal-Green) Pc
0.6078 0 0.4745 0 0.4 1 0.6 Xa
(66FF99  102,255,153  Light Teal-Green) Pc
0.8118 0 0.7373 0 0.2 0.8 0.4 Xa
(33CC66  51,204,102  Medium Teal-Green) Pc
0.9176 0.0314 0.6588 0.0039 0 0.6 0.4 Xa
(009966  0,153,102  Dark Teal-Cyan) Pc
0.5882 0 0.0235 0 0.4 1 1 Xa
(66FFFF  102,255,255  Light Faded Cyan) Pc
0.6078 0.0118 0.1059 0 0.4 0.8 0.8 Xa
(66CCCC  102,204,204  Light Dull Cyan) Pc
0.5922 0.1843 0.2471 0.0392 0.4 0.6 0.6 Xa
(669999  102,153,153  Medium Weak Cyan) Pc
0.9608 0.6235 0.2627 0.1373 0 0.2 0.4 Xa
(003366  0,51,102  Obscure Dull Azure) Pc
0.8314 0.3961 0.1216 0.0235 0.2 0.4 0.6 Xa
(336699  51,102,153  Dark Dull Azure) Pc
0.6196 0.5059 0 0 0.4 0.4 1 Xa
(6666FF  102,102,255  Light Faded Blue) Pc
0.6196 0.4941 0 0 0.4 0.4 0.8 Xa
(6666CC  102,102,204  Light Dull Blue) Pc
0.6039 0.4667 0.1176 0.0314 0.4 0.4 0.6 Xa
(666699  102,102,153  Medium Weak Blue) Pc
0.8667 0.9412 0 0 0.2 0 0.6 Xa
(330099  51,0,153  Dark Violet-Blue) Pc
0.3961 0.7843 0 0 0.6 0.2 0.8 Xa
(9933CC  153,51,204  Medium Violet-Magenta) Pc
0.1686 0.5882 0 0 0.8 0.4 1 Xa
(CC66FF  204,102,255  Light Violet-Magenta) Pc
0.3882 0.9765 0 0 0.6 0 1 Xa
(9900FF  153,0,255  Violet-Violet-Magenta) Pc
0.8863 0 0.5804 0 0 1 0.6 Xa
(00FF99  0,255,153  Teal-Teal-Cyan) Pc
0.6039 0 0.2118 0 0.4 1 0.8 Xa
(66FFCC  102,255,204  Light Teal-Cyan) Pc
0.8039 0 0.4235 0 0.2 0.8 0.6 Xa
(33CC99  51,204,153  Medium Teal-Cyan) Pc
0.7686 0 0.0078 0 0.2 1 1 Xa
(33FFFF  51,255,255  Light Hard Cyan) Pc
0.8196 0 0.1059 0 0.2 0.8 0.8 Xa
(33CCCC  51,204,204  Medium Faded Cyan) Pc
0.8157 0.098 0.2784 0.0118 0.2 0.6 0.6 Xa
(339999  51,153,153  Dark Dull Cyan) Pc
0.7804 0.3059 0.4118 0.1529 0.2 0.4 0.4 Xa
(336666  51,102,102  Dark Weak Cyan) Pc
0.9569 0.3451 0.1255 0.0275 0 0.4 0.6 Xa
(006699  0,102,153  Dark Azure-Cyan) Pc
0.9569 0.6902 0.0314 0.0039 0 0.2 0.6 Xa
(003399  0,51,153  Dark Azure-Blue) Pc
0.8588 0.7373 0 0 0.2 0.2 1 Xa
(3333FF  51,51,255  Light Hard Blue) Pc
0.8588 0.7294 0 0 0.2 0.2 0.8 Xa
(3333CC  51,51,204  Medium Faded Blue) Pc
0.851 0.7137 0.0235 0.0039 0.2 0.2 0.6 Xa
(333399  51,51,153  Dark Dull Blue) Pc
0.8 0.6706 0.2627 0.1255 0.2 0.2 0.4 Xa
(333366  51,51,102  Dark Weak Blue) Pc
0.6275 0.7608 0 0 0.4 0.2 0.8 Xa
(6633CC  102,51,204  Medium Violet-Blue) Pc
0.4 0.549 0 0 0.6 0.4 1 Xa
(9966FF  153,102,255  Light Violet-Blue) Pc
0.6667 0.9529 0 0 0.4 0 1 Xa
(6600FF  102,0,255  Violet-Violet-Blue) Pc
0.9137 0 0.251 0 0 1 0.8 Xa
(00FFCC  0,255,204  Cyan-Cyan-Teal) Pc
0.8196 0 0.2353 0 0.2 1 0.8 Xa
(33FFCC  51,255,204  Light Cyan-Teal) Pc
0.8353 0 0 0 0 1 1 Xa
(00FFFF  0,255,255  Cyan) Pc
0.9176 0 0.1059 0 0 0.8 0.8 Xa
(00CCCC  0,204,204  Dark Hard Cyan) Pc
0.9137 0.0627 0.298 0.0078 0 0.6 0.6 Xa
(009999  0,153,153  Dark Faded Cyan) Pc
0.9333 0.2588 0.4627 0.1137 0 0.4 0.4 Xa
(006666  0,102,102  Obscure Dull Cyan) Pc
0.9294 0.4235 0.5726 0.4235 0 0.2 0.2 Xa
(003333  0,51,51  Obscure Weak Cyan) Pc
0.8118 0.1451 0.0078 0 0.2 0.6 0.8 Xa
(3399CC  51,153,204  Medium Azure-Cyan) Pc
0.8431 0.4353 0 0 0.2 0.4 0.8 Xa
(3366CC  51,102,204  Medium Azure-Blue) Pc
0.9569 0.9294 0 0 0 0 1 Xa
(0000FF  0,0,255  Blue) Pc
0.9608 0.9608 0 0 0 0 0.8 Xa
(0000CC  0,0,204  Dark Hard Blue) Pc
0.9647 0.9451 0 0 0 0 0.6 Xa
(000099  0,0,153  Dark Faded Blue) Pc
0.9725 0.9569 0.1569 0.0471 0 0 0.4 Xa
(000066  0,0,102  Obscure Dull Blue) Pc
0.9647 0.9529 0.3725 0.3647 0 0 0.2 Xa
(000033  0,0,51  Obscure Weak Blue) Pc
0.6392 0.7686 0 0 0.4 0.2 1 Xa
(6633FF  102,51,255  Light Blue-Violet) Pc
0.9059 0.9294 0 0 0.2 0 1 Xa
(3300FF  51,0,255  Blue-Blue-Violet) Pc
0.902 0 0.4549 0 0 0.8 0.6 Xa
(00CC99  0,204,153  Dark Cyan-Teal) Pc
0 0 0 1 0 0 0 Xa
( ) Pc
( ) Pc
( ) Pc
( ) Pc
0.902 0.1059 0 0 0 0.6 0.8 Xa
(0099CC  0,153,204  Dark Cyan-Azure) Pc
0.8275 0.0039 0 0 0.2 0.8 1 Xa
(33CCFF  51,204,255  Light Cyan-Azure) Pc
0.6118 0.0078 0 0 0.4 0.8 1 Xa
(66CCFF  102,204,255  Light Azure-Cyan) Pc
0.6118 0.2431 0 0 0.4 0.6 1 Xa
(6699FF  102,153,255  Light Azure-Blue) Pc
0.8275 0.4588 0 0 0.2 0.4 1 Xa
(3366FF  51,102,255  Light Blue-Azure) Pc
0.9451 0.7098 0 0 0 0.2 0.8 Xa
(0033CC  0,51,204  Dark Blue-Azure) Pc
0 0 0 1 0 0 0 Xa
( ) Pc
( ) Pc
( ) Pc
( ) Pc
0.8863 0.9765 0 0 0.2 0 0.8 Xa
(3300CC  51,0,204  Dark Blue-Violet) Pc
0 0 0 1 0 0 0 Xa
( ) Pc
( ) Pc
( ) Pc
( ) Pc
( ) Pc
( ) Pc
0.9216 0 0 0 0 0.8 1 Xa
(00CCFF  0,204,255  Cyan-Cyan-Azure) Pc
0.8941 0.1373 0 0 0 0.6 1 Xa
(0099FF  0,153,255  Azure-Azure-Cyan) Pc
0.9176 0.4353 0 0 0 0.4 1 Xa
(0066FF  0,102,255  Azure-Azure-Blue) Pc
0.9373 0.7255 0 0 0 0.2 1 Xa
(0033FF  0,51,255  Blue-Blue-Azure) Pc
0 0 0 1 0 0 0 Xa
( ) Pc
( ) Pc
( ) Pc
( ) Pc
( ) Pc
( ) Pc
PB
%AI5_EndPalette
%AI5_Begin_NonPrinting
Np
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe Blends Plugin) (Live Blends.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (Calligraphic Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI5_End_NonPrinting--
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 -30688 Lb
(Layer 1) Ln
0 A
1 To
1 0 0 1 132.8042 529.5 0 Tp
0 Tv
1 Ap
800 Ar
0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D
0 XR
470.8047 372.001 m
470.8047 529.5 L
132.8042 529.5 L
132.8042 372.001 L
470.8047 372.001 L
nTP
95.4487 -14.25 Td
0 Tr
0 O
0 g
%_ 0 50 XQ
/_Helvetica 16 14.896 -3.5999 Tf
0 Ts
100 100 Tz
0 Tt
%_0 0 100 100 Xu
%AI55J_GlyphSubst: GlyphSubstNone 
0 TA
%_ 0 XL
0 TY
0 TV
36 0 Xb
XB
0 0 5 TC
100 100 200 TW
25 TG
0 0 0 Ti
1 Ta
0 1 2 2 99 Th
0 Tq
139 Tg
0 0 Tl
0 Tc
0 Tw
(Webmaster's Palette\r) Tx 
73.5515 -19 Td
(\r) Tx 
-156.4002 -17 Td
/_Helvetica 14 13.034 -3.1499 Tf
0 0 25 TC
100 100 150 TW
(This document contains the 216 Web-Safe Colors.  ) Tx 
-3.108 -17 Td
(These are the colors most widely supported by web ) Tx 
-7.3776 -17 Td
(browsers in 8-bit-color mode.  It includes hexadecimal ) Tx 
16.345 -17 Td
(HTML, decimal RGB and 3-letter VACCC codes.  ) Tx 
3.8777 -17 Td
(Made by www.visibone.com for use with Adobe ) Tx 
110.7743 -17 Td
(Illustrator) Tx 
(\256) Tx 
(.) Tx 
(\r) Tx 
35.8887 -17 Td
(\r) Tx 
TO
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_typography_AI5 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
